# /---------------------------------------------------------------------------
# outsideSqlDefinitionMap: (NotRequired - Default map:{})
#
# The various settings about outsideSql. 
#
# o isGenerateProcedureParameterBean: (NotRequired - Default false)
# o isGenerateProcedureCustomizeEntity: (NotRequired - Default false)
# o targetProcedureCatalogList: (NotRequired - Default list:{})
# o targetProcedureSchemaList: (NotRequired - Default list:{})
# o targetProcedureNameList: (NotRequired - Default list:{})
# o executionMetaProcedureNameList: (NotRequired - Default list:{})
# o procedureSynonymHandlingType: (NotRequired - Default NONE)
# o isRequiredSqlTitle: (NotRequired - Default true)
# o isRequiredSqlDescription: (NotRequired - Default true)
# o sqlFileEncoding: (NotRequired - Default 'UTF-8')
# o sqlDirectory: (NotRequired - Default generateOutputDirectory & resourceOutputDirectory)
# o sql2EntityOutputDirectory: (NotRequired - Default generateOutputDirectory)
# o applicationOutsideSqlMap: (NotRequired - Default map:{})
# o sqlPackage: (NotRequired - Default all packages)
#
# *The line that starts with '#' means comment-out.
#
map:{
    # /- - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    # o isGenerateProcedureParameterBean: (NotRequired - Default false)
    #   [true]
    #     The parameter beans for procedure are auto-generated.
    #     If you call the procedure from DBFlute, you should specify 'true'!
    #
    #   [false]
    #     Non.
    #
    ; isGenerateProcedureParameterBean = false
    # - - - - - - - - - -/

    # /- - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    # o isGenerateProcedureCustomizeEntity: (NotRequired - Default false)
    #   [true]
    #     The customize entities for procedure's out-parameter
    #     and not-param-result are auto-generated.
    #     And also not-param-result's properties are auto-generated.
    #     Target procedures are executed actually at Sql2Entity task.
    #     (because of getting from execution meta data (result set meta data))
    #     This property is valid only when isGenerateProcedureParameterBean is true.
    #
    #   [false]
    #     Non.
    #
    ; isGenerateProcedureCustomizeEntity = false
    # - - - - - - - - - -/

    # /- - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    # o targetProcedureCatalogList: (NotRequired - Default list:{})
    #  You can specify target catalog of generated parameter bean for procedure.
    #  This property is valid only when generateProcedureParameterBean is valid.
    #
    #; targetProcedureCatalogList = list:{FOO_CATALOG ; prefix:FOO_ ; suffix:_FOO ; contain:_FOO_}
    # - - - - - - - - - -/

    # /- - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    # o targetProcedureSchemaList: (NotRequired - Default list:{})
    #  You can specify target schema of generated parameter bean for procedure.
    #  This property is valid only when generateProcedureParameterBean is valid.
    #   e.g. list:{PROCEDUREDB}
    #
    #; targetProcedureSchemaList = list:{FOO_SCHEMA ; prefix:FOO_ ; suffix:_FOO ; contain:_FOO_}
    # - - - - - - - - - -/

    # /- - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    # o targetProcedureNameList: (NotRequired - Default list:{})
    #  You can specify target name of generated parameter bean for procedure.
    #  This property is valid only when isGenerateProcedureParameterBean is valid.
    #   e.g. list:{prefix:SP_}
    #  And you can specify procedures through DB link.
    #  This is treated as additional setting
    #  so it is independent from specifications for main schema.
    #   e.g. SP_FOO@NEXT_LINK (when DB link name is 'NEXT_LINK')  
    #
    #; targetProcedureNameList = list:{FOO_PROCEDURE ; prefix:FOO_ ; suffix:_FOO ; contain:_FOO_}
    # - - - - - - - - - -/

    # /- - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    # o executionMetaProcedureNameList: (NotRequired - Default list:{})
    #  You can specify target name of generated customize entity for procedure.
    #  This property is valid only when isGenerateProcedureCustomizeEntity is valid.
    #   e.g. list:{prefix:SP_}
    #
    #; executionMetaProcedureNameList = list:{FOO_PROCEDURE ; prefix:FOO_ ; suffix:_FOO ; contain:_FOO_}
    # - - - - - - - - - -/

    # /- - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    # o procedureSynonymHandlingType: (NotRequired - Default NONE)
    #  You can specify the handling type of procedure synonym.
    #   NONE - No handling. (default)
    #   INCLUDE - It includes procedure synonyms.
    #   SWITCH - It switches all normal procedures to procedure synonyms.
    #
    #; procedureSynonymHandlingType = NONE
    # - - - - - - - - - -/

    # /- - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    # o isRequiredSqlTitle: (NotRequired - Default true)
    #   [true]
    #     You should always write the title of outsideSql.
    #     If it doesn't exist, the OutsideSqlTest task fails.
    #
    #   [false]
    #     Non.
    #
    #; isRequiredSqlTitle = true
    # - - - - - - - - - -/

    # /- - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    # o isRequiredSqlDescription: (NotRequired - Default true)
    #   [true]
    #     You should always write the description of outsideSql.
    #     If it doesn't exist, the OutsideSqlTest task fails.
    #
    #   [false]
    #     Non.
    #
    #; isRequiredSqlDescription = true
    # - - - - - - - - - -/

    # /- - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    # o sqlFileEncoding: (NotRequired - Default 'UTF-8')
    #  The encoding of SQL file for outsideSql.
    #  Basically you don't need this.
    #
    #; sqlFileEncoding = UTF-8
    # - - - - - - - - - -/

    # /- - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    # o sqlDirectory: (NotRequired - Default generateOutputDirectory & resourceOutputDirectory)
    #  The directory of SQL file for outsideSql.
    #  Basically you don't need this if your directory structure is same as default.
    #  It's also for DBFlute library project when you use ApplicationOutsideSql.
    #
    #; sqlDirectory = ../src/main/resources
    # - - - - - - - - - -/

    # /- - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    # o sql2EntityOutputDirectory: (NotRequired - Default generateOutputDirectory)
    #  The output directory of classes that is generated by Sql2Entity.
    #  Basically you don't need this if your directory structure is same as default.
    #  It's also for DBFlute library project when you use ApplicationOutsideSql.
    #
    #; sql2EntityOutputDirectory = ../src/main/java
    # - - - - - - - - - -/

    # /- - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    # o applicationOutsideSqlMap: (NotRequired - Default map:{})
    #  You can set additional users.
    #  Elements of this map are as below:
    #   o key of map: a relative path to the application project from DBFlute client
    #   o sqlDirectory: SQL directory as a relative path from the application directory 
    #     (NotRequired - Default Java:'src/main/java' & 'src/main/resources' CSharp:'source')
    #   o sql2EntityOutputDirectory: source output directory from as a relative path from the application directory
    #     (NotRequired - Default Java:'src/main/java' CSharp:'source')
    #
    #; applicationOutsideSqlMap = map:{
    #    ; ../../app1 = map:{
    #        ; sqlDirectory = src/main/resources
    #        ; sql2EntityOutputDirectory = src/main/java
    #    }
    #    ; ../../app2 = map:{
    #        ; sqlDirectory = src/main/resources
    #        ; sql2EntityOutputDirectory = src/main/java
    #    }
    #}
    # - - - - - - - - - -/

    # /- - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    # o sqlPackage: (NotRequired - Default all packages)
    #  The package of SQL file for outsideSql.
    #  This is basically for narrowing SQL-searching target,
    #  for example, when the project has SQL files for other framework.
    #  So basically you don't need this.
    #
    #  You can use variable '$$PACKAGE_BASE$$' that means 'packageBase'.
    #  But you need to make SQL files at 'exbhv' under the set package
    #  if you use BehaviorQueryPath (MemberBhv_selectSimpleMember.sql).
    #
    #; sqlPackage = $$PACKAGE_BASE$$
    # - - - - - - - - - -/
}
# ----------------/